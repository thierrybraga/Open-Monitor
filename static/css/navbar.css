
/* navbar.css - Estilos modernos para a navbar */

/* Estilos gerais da navbar */
.navbar {
  padding: var(--space-sm) var(--space-md);
  background: var(--navbar-bg);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border-bottom: 1px solid var(--border-medium);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08), 
              0 1px 3px rgba(0, 0, 0, 0.1);
  min-height: var(--layout-navbar-height);
  z-index: var(--z-index-navbar);
  position: fixed;
  top: 0;
  left: var(--layout-sidebar-width-collapsed);
  right: 0;
  display: flex;
  align-items: center;
  transition: all var(--animation-duration-normal) var(--ease-standard);
  animation: navbar-slide-down 0.6s var(--ease-standard);
  color: var(--navbar-text);
}

/* Animação de entrada da navbar */
@keyframes navbar-slide-down {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

/* Tema escuro para navbar */
@media (prefers-color-scheme: dark) {
  .navbar {
    background: var(--navbar-bg);
    border-bottom: 1px solid var(--border-medium);
    color: var(--navbar-text);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3), 
                0 1px 3px rgba(0, 0, 0, 0.2);
  }
}

/* Suporte para classes de tema forçado */
.theme-light .navbar {
  background: var(--navbar-bg);
  border-bottom: 1px solid var(--border-medium);
  color: var(--navbar-text);
}

.theme-dark .navbar {
  background: var(--navbar-bg);
  border-bottom: 1px solid var(--border-medium);
  color: var(--navbar-text);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3), 
              0 1px 3px rgba(0, 0, 0, 0.2);
}

/* Estilo moderno para o logo/brand */
.navbar-brand {
  font-weight: var(--font-weight-bold);
  color: var(--navbar-text);
  font-size: var(--font-size-xl);
  display: flex;
  align-items: center;
  gap: var(--space-sm);
  text-decoration: none;
  position: relative;
  transition: all var(--animation-duration-fast) var(--ease-standard);
  letter-spacing: -0.02em;
}

.navbar-brand::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 0;
  height: 2px;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  transition: width var(--animation-duration-normal) var(--ease-standard);
}

.navbar-brand:hover {
  transform: translateY(-1px);
  color: var(--navbar-text-hover);
}

.navbar-brand:hover::after {
  width: 100%;
}


.brand-icon { /* Considerar mover para components.css */
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--space-3xl); /* Usar variável para 32px (aprox) */
  height: var(--space-3xl); /* Usar variável para 32px (aprox) */
  /* Remover background-color e color que eram para o ícone antigo ou imagem */
  /* background-color: var(--color-primary); */
  /* color: var(--color-on-primary); */
  border-radius: var(--radius-md); /* Usar variável de raio de variables.css */
  padding: var(--space-xs); /* Usar variável de espaçamento de variables.css */
}


.brand-icon i { /* Remover esta regra se o ícone f
.brand-icon i { /* Estilo para o ícone do logo */
  font-size: var(--font-size-xl); /* Ajustar tamanho da fonte para o ícone 32x32 */
}
mg {
  display: block; /* Para garantir que a imagem se ajuste corretamente */
  max-height: calc(var(--layout-navbar-height) - (2 * var(--space-sm))); /* Ajustar altura máxima baseada na navbar height e padding */
  width: auto; /* Manter a proporção da imagem */
  object-fit: contain; /* Garantir que a imagem caiba sem distorcer */
}


/* Botões modernos da navbar */
.sidebar-toggle,
.dark-mode-toggle,
#refreshButton {
  border-radius: var(--radius-lg);
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--ui-bg-hover);
  border: 1px solid var(--border-medium);
  color: var(--navbar-text);
  cursor: pointer;
  position: relative;
  overflow: hidden;
  transition: all var(--animation-duration-fast) var(--ease-standard);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
}

.sidebar-toggle::before,
.dark-mode-toggle::before,
#refreshButton::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.3) 0%, transparent 70%);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  transition: all var(--animation-duration-normal) var(--ease-standard);
  z-index: 0;
}

.sidebar-toggle:hover,
.dark-mode-toggle:hover,
#refreshButton:hover {
  background: var(--ui-bg-active);
  border-color: var(--ui-border-interactive);
  color: var(--navbar-text-hover);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.sidebar-toggle:hover::before,
.dark-mode-toggle:hover::before,
#refreshButton:hover::before {
  width: 100px;
  height: 100px;
}

.sidebar-toggle:active,
.dark-mode-toggle:active,
#refreshButton:active {
  transform: translateY(0);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.sidebar-toggle i,
.dark-mode-toggle i,
#refreshButton i {
  position: relative;
  z-index: 1;
  font-size: 18px;
  transition: transform var(--animation-duration-fast) var(--ease-standard);
}

.sidebar-toggle:hover i,
.dark-mode-toggle:hover i,
#refreshButton:hover i {
  transform: scale(1.1);
}

/* Animação específica para o botão de refresh */
#refreshButton:active i {
  animation: spin 0.6s ease-in-out;
}

@keyframes spin {
  from { transform: rotate(0deg) scale(1.1); }
  to { transform: rotate(360deg) scale(1.1); }
}

/* Tema escuro para botões */
@media (prefers-color-scheme: dark) {
  .sidebar-toggle,
  .dark-mode-toggle,
  #refreshButton {
    background: var(--ui-bg-hover);
    border-color: var(--border-medium);
    color: var(--navbar-text);
  }
  
  .sidebar-toggle:hover,
  .dark-mode-toggle:hover,
  #refreshButton:hover {
    background: var(--ui-bg-active);
    border-color: var(--ui-border-interactive);
    color: var(--navbar-text-hover);
  }
}

/* Suporte para classes de tema forçado nos botões */
.theme-light .sidebar-toggle,
.theme-light .dark-mode-toggle,
.theme-light #refreshButton {
  background: var(--ui-bg-hover);
  border-color: var(--border-medium);
  color: var(--navbar-text);
}

.theme-dark .sidebar-toggle,
.theme-dark .dark-mode-toggle,
.theme-dark #refreshButton {
  background: var(--ui-bg-hover);
  border-color: var(--border-medium);
  color: var(--navbar-text);
}

.dark-mode-toggle:hover {
  background-color: var(--ui-bg-hover); /* Usar variável de background de hover de variables.css */
}

/* Estilo para toggle do tema claro/escuro */
.dark-mode-toggle i { /* Considerar mover para components.css ou navbar.css */
  font-size: var(--font-size-lg); /* Usar variável de tamanho de fonte/ícone de variables.css/typography.css */
  /* Adicionar transition de layout.css */
  transition: transform var(--animation-duration-normal) var(--ease-standard);
}

/* Avatar do usuário */
.avatar-button { /* Considerar mover para components.css */
  display: flex;
  align-items: center;
  padding: var(--space-xs) var(--space-sm); /* Usar variáveis de espaçamento de variables.css */
  border-radius: var(--radius-md); /* Usar variável de raio de variables.css */
  transition: all var(--animation-duration-fast) var(--ease-standard); /* Usar variáveis de transição de variables.css */
  color: var(--navbar-text);
  border: 1px solid var(--border-medium);
}

.avatar-button:hover {
  background-color: var(--ui-bg-hover); /* Usar variável de background de hover de variables.css */
  color: var(--navbar-text-hover);
  border-color: var(--ui-border-interactive);
}

.avatar-image { /* Considerar mover para components.css */
  width: var(--space-2xl); /* Usar variável de tamanho/espaçamento de variables.css */
  height: var(--space-2xl); /* Usar variável de tamanho/espaçamento de variables.css */
  border-radius: var(--radius-full); /* Usar variável de raio de variables.css */
  object-fit: cover;
}

.avatar-button i { /* Considerar mover para components.css */
  font-size: var(--font-size-xl); /* Usar variável de tamanho de fonte/ícone de variables.css/typography.css */
}

.username { /* Considerar mover para components.css ou typography.css */
  margin-left: var(--space-xs); /* Usar variável de espaçamento de variables.css */
  font-weight: var(--font-weight-medium); /* Usar variável de peso de fonte de variables.css/typography.css */
  color: var(--navbar-text);
}

/* Dropdown menu melhorado */
.dropdown-menu { /* Considerar mover para components.css */
  border-radius: var(--radius-lg); /* Usar variável de raio de variables.css */
  border: 1px solid var(--border-medium); /* Usar variável de borda de variables.css */
  padding: var(--space-sm) 0; /* Usar variável de espaçamento de variables.css */
  /* Adicionar background-color, color, box-shadow, z-index de variables.css/layout.css/components.css */
  background-color: var(--surface-100); /* Usar variável de surface de variables.css */
  color: var(--content-strong); /* Usar variável de conteúdo de variables.css */
  box-shadow: var(--shadow-dropdown); /* Usar variável de sombra de variables.css */
  z-index: var(--z-index-dropdown); /* Usar variável de z-index de variables.css */
}

.dropdown-header { /* Considerar mover para components.css o typography.css */
  font-weight: var(--font-weight-semibold); /* Usar variável de peso de fonte de variables.css/typography.css */
  color: var(--color-primary); /* Usar variável de cor primária de variables.css */
}

.dropdown-item { /* Considerar mover para components.css */
  padding: var(--space-sm) var(--space-md); /* Usar variáveis de espaçamento de variables.css */
  display: flex;
  align-items: center;
  transition: background-color var(--animation-duration-fast) var(--ease-standard); /* Usar variáveis de transição de variables.css */
  /* Adicionar color */
  color: var(--content-medium); /* Usar variável de conteúdo de variables.css */
}

.dropdown-item:hover {
  background-color: var(--ui-bg-hover); /* Usar variável de background de hover de variables.css */
}

.dropdown-item i { /* Considerar mover para components.css */
  width: var(--space-md); /* Usar variável de tamanho/espaçamento de variables.css */
  text-align: center;
}

/* Botão de refresh e última sincronização */
.refresh-button { /* Considerar mover para components.css */\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: var(--space-xs); /* Ajustado para botão apenas com ícone */\n  border-radius: var(--radius-md); /* Usar variável de raio de variables.css */\n  transition: all var(--animation-duration-normal) var(--ease-standard); /* Usar variáveis de transição de variables.css */\n  /* Adicionar background, border, color */\n  background: transparent;\n  border: 1px solid var(--border-medium);\n  color: var(--content-medium);\n}}

.refresh-button:hover {
     background-color: var(--ui-bg-hover);
}

.refresh-button i { /* Considerar mover para components.css */
  font-size: var(--font-size-md); /* Usar variável de tamanho de fonte/ícone de variables.css/typography.css */
}

/* Animação de rotação para o ícone de refresh */
@keyframes spin { /* Manter keyframes aqui */
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.refresh-button.refreshing i { /* Manter aqui se for animação específica */
  animation: spin var(--animation-duration-normal) var(--ease-linear) infinite; /* Usar variáveis de animação de variables.css */
}

.refresh-text { /* Considerar mover para typography.css */
  font-weight: var(--font-weight-medium); /* Usar variável de peso de fonte de variables.css/typography.css */
}

.last-sync { /* Considerar mover para components.css ou utilities.css */
  font-size: var(--font-size-sm); /* Usar variável de tamanho de fonte de variables.css/typography.css */
  padding: 0 var(--space-sm); /* Usar variável de espaçamento de variables.css */
  color: var(--content-medium); /* Melhor contraste que content-weak */
  border-right: 1px solid var(--border-medium); /* Usar variável de borda de variables.css */
  margin-right: var(--space-xs); /* Usar variável de espaçamento de variables.css */
}

.last-sync-label { /* Considerar mover para typography.css */
  font-size: var(--font-size-xs); /* Usar variável de tamanho de fonte de variables.css/typography.css */
  color: var(--content-medium); /* Melhor contraste */
}

.last-sync-time { /* Considerar mover para typography.css */
  font-weight: var(--font-weight-semibold); /* Usar variável de peso de fonte de variables.css/typography.css */
  color: var(--content-strong); /* Melhor contraste para o timestamp */
}

/* Notificação de sincronização */
.sync-notification { /* Considerar mover para components.css ou notifications.css */
  position: fixed;
  bottom: var(--space-md); /* Usar variável de espaçamento de variables.css */
  right: var(--space-md); /* Usar variável de espaçamento de variables.css */
  background-color: var(--color-success); /* Usar variável de cor de sucesso de variables.css */
  color: var(--color-on-success); /* Considerar variável para cor do texto em background de sucesso */
  padding: var(--space-sm) var(--space-md); /* Usar variáveis de espaçamento de variables.css */
  border-radius: var(--radius-md); /* Usar variável de raio de variables.css */
  display: flex;
  align-items: center;
  font-size: var(--font-size-sm); /* Usar variável de tamanho de fonte de variables.css/typography.css */
  box-shadow: var(--shadow-md); /* Usar variável de sombra de variables.css */
  transform: translateY(var(--space-3xl)); /* Usar variável de espaçamento de variables.css */
  opacity: 0;
  transition: transform var(--animation-duration-normal) var(--ease-standard), opacity var(--animation-duration-normal) var(--ease-standard); /* Usar variáveis de transição de variables.css */
  z-index: var(--z-index-notification); /* Usar variável de z-index de variables.css */
}

.sync-notification.show {
  transform: translateY(0);
  opacity: 1;
}

.sync-notification i { /* Considerar mover para components.css ou notifications.css */
  margin-right: var(--space-xs); /* Usar variável de espaçamento de variables.css */
  font-size: var(--font-size-md); /* Usar variável de tamanho de fonte/ícone de variables.css/typography.css */
}

/* Ajustes responsivos */
/* Mobile pequeno */
@media (max-width: var(--breakpoint-sm)) {
  .navbar {
    padding: var(--space-xs) var(--space-xs);
    left: 0;
    transition: none;
    height: calc(var(--layout-navbar-height) - var(--space-xs));
  }
  
  .navbar-brand {
    font-size: var(--font-size-md);
  }
  
  .brand-icon {
    padding: var(--space-2xs);
  }
  
  .brand-icon i {
    font-size: var(--font-size-lg);
  }
  
  .sidebar-toggle,
  .dark-mode-toggle,
  .refresh-button {
    width: var(--space-2xl);
    height: var(--space-2xl);
    padding: 0;
  }
  
  .refresh-text,
  .username,
  .last-sync {
    display: none;
  }
  
  .avatar-image {
    width: var(--space-xl);
    height: var(--space-xl);
  }
}

/* Mobile médio e tablets */
@media (min-width: var(--breakpoint-sm)) and (max-width: var(--breakpoint-md)) {
  .navbar {
    padding: var(--space-xs) var(--space-sm);
    left: 0;
    transition: none;
  }

  .navbar.expanded {
       left: 0;
  }

  .refresh-button {
    width: var(--space-3xl);
    height: var(--space-3xl);
    padding: 0;
  }

  .refresh-text {
    display: none;
  }
  
  .username {
    display: none;
  }
}

/* Desktop médio */
@media (min-width: var(--breakpoint-md)) and (max-width: var(--breakpoint-lg)) {
  .navbar {
    padding: var(--space-sm) var(--space-md);
  }
  
  .sidebar-toggle,
  .dark-mode-toggle {
    width: calc(var(--space-3xl) + var(--space-xs));
    height: calc(var(--space-3xl) + var(--space-xs));
  }
  
  .refresh-button {
    padding: var(--space-xs) var(--space-sm);
  }
}

/* Desktop grande */
@media (min-width: var(--breakpoint-lg)) {
  .navbar {
    padding: var(--space-sm) var(--space-lg);
  }
  
  .sidebar-toggle,
  .dark-mode-toggle {
    width: calc(var(--space-3xl) + var(--space-sm));
    height: calc(var(--space-3xl) + var(--space-sm));
  }
  
  .sidebar-toggle:hover,
  .dark-mode-toggle:hover {
    transform: scale(1.05);
  }
  
  .refresh-button {
    padding: var(--space-sm) var(--space-md);
  }
  
  .refresh-button:hover {
    transform: translateY(-1px);
  }
  
  .avatar-button:hover {
    transform: translateY(-1px);
  }
}

/* Classe de utilidade para ícones de botão - MOVER PARA UTILITIES.CSS */
/* .btn-icon { ... } */

/* Estilos para modo escuro (ativados quando a classe .dark-mode é adicionada ao body) - REMOVIDOS. A lógica de tema é tratada em variables.css */
/* body.dark-mode .navbar { ... } */
/* body.dark-mode .dark-mode-icon { ... } */
